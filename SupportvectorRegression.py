# -*- coding: utf-8 -*-
"""svr1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1X9pxQYazjvGo8Ks_QYjf-k9pnMYA8Psn

# Support Vector Regression (SVR)

## Importing the libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

"""## Importing the dataset"""

df=pd.read_csv("Position_Salaries.csv")
x=df.iloc[:,1:-1].values
y=df.iloc[:,-1].values

print(x)
print(y)

y=y.reshape(len(y),1)
print(y)

"""## Feature Scaling"""

from sklearn.preprocessing import StandardScaler
x_scale = StandardScaler()
y_scale = StandardScaler()
x = x_scale.fit_transform(x)
y =y_scale.fit_transform(y)

"""## Training the SVR model on the whole dataset"""

from sklearn.svm import SVR
regressor = SVR(kernel = 'rbf')
regressor.fit(x, y)

"""## Predicting a new result"""

y_scale.inverse_transform(regressor.predict(x_scale.transform([[6.5]])).reshape(-1,1))

"""## Visualising the SVR results"""

plt.scatter(x_scale.inverse_transform(x), y_scale.inverse_transform(y), color = 'red')
plt.plot(x_scale.inverse_transform(x), y_scale.inverse_transform(regressor.predict(x).reshape(-1,1)), color = 'blue')
plt.title('Truth or Bluff (SVR)')
plt.xlabel('Position level')
plt.ylabel('Salary')
plt.show()

"""## Visualising the SVR results (for higher resolution and smoother curve)"""

X_grid = np.arange(min(x_scale.inverse_transform(x)), max(x_scale.inverse_transform(x)), 0.1)
X_grid = X_grid.reshape((len(X_grid), 1))
plt.scatter(x_scale.inverse_transform(x), y_scale.inverse_transform(y), color = 'red')
plt.plot(X_grid, y_scale.inverse_transform(regressor.predict(x_scale.transform(X_grid)).reshape(-1,1)), color = 'blue')
plt.title('Truth or Bluff (SVR)')
plt.xlabel('Position level')
plt.ylabel('Salary')
plt.show()

!git remote add origin https://github.com/dileepyadavgolla/MachineLearning.git

!git branch -M main

!git push -u origin main